---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Spring Creek Golf League">

<h1>Tally Sheet</h1><br>

<form 
name="tallysheet" id="form1" method="post" data-netlify="true" onSubmit="submit"
data-netlify-honeypot="bot-field" action="/success/"
>
<input type="hidden" name="bot-field">
<div class="team">
  Match Scheduled Date:
<input type="date" name="date"> <br><br>
  <div class="teamsel">
    Team: <select name="team1" id="team1" >
      <option value="" selected="selected">Select team</option>
    </select><br>
  </div>
<div class="points">
  Points: <input type="number" name="t1pts" min="0" max="54"><br><br>
</div>

A: <select name="p1A" id="player1A">
  <option value="" selected="selected">Please select player</option>
</select><br>
<div class="scores">
  Score: <input type="number" id="p1Ascore" name="p1Ascore" min="30" max="72"><br><br>
</div>

B: <select name="p1B" id="player1B">
  <option value="" selected="selected">Please select player</option>
</select><br>
<div class="scores">
  Score: <input type="number" id="p1Bscore" name="p1Bscore" min="30" max="72"><br><br>

</div>

</div><br>
<div class="team">
  <div class="teamsel">
    Team: <select name="team2" id="team2" >
      <option value="" selected="selected">Select team</option>
    </select><br>
  </div>

<div class="points">
  Points: <input type="number" id="t2pts" name="t2pts" min="0" max="54"><br><br>
</div>

A: <select name="p2A" id="player2A">
    <option value="" selected="selected">Please select player</option>
  </select><br>
  <div class="scores">
    Score: <input type="number" id="p2Ascore" name="p2Ascore" min="30" max="72"> <br><br>
  </div>

B: <select name="p2B" id="player2B">
    <option value="" selected="selected">Please select player</option>
  </select><br>
  <div class="scores">
    Score: <input type="number" id="p2Bscore" name="p2Bscore" min="30" max="72"><br><br>
  </div>
</div>
<br>
<div id="upload">
  <label for="file">Tallysheet & scorecard photo</label><br><br>
  <input type="file" name="upload" accept="image/*" /> <br><br>
</div>

  <input type="submit" value="submit" id="submit"> 
</form>

</Layout>
<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
  .team {
    width: 300px;
    border: solid;
  	
	}
  .points, .scores {
    padding-top: 10px;
	}
  .teamsel {
    padding-top: 10px;
	}
  #upload {
    padding-top: 2em;
    width: 200px;
    border: solid;
	}
  #submit {
    margin-top: 20px;
    width: 20em;
    height: 5em;
  }
</style>


<script>

async function getTeamData(url) {
  const response = await fetch(url);
  return response.json();
}

const teamPlayer = await getTeamData('https://alvisbjones.github.io/jsonfiles/teamplayer.json');

console.log(teamPlayer)


window.onload = function() {
  const team1Sel = document.getElementById("team1");
  const team2Sel = document.getElementById("team2");
  const playerSel1A = document.getElementById("player1A");
  const playerSel2A = document.getElementById("player2A");
  const playerSel1B = document.getElementById("player1B");
  const playerSel2B = document.getElementById("player2B");
  
 
  for (const t of teamPlayer.teams) {
    team1Sel.options[team1Sel.options.length] = new Option(t.name, t.number-1);
    team2Sel.options[team2Sel.options.length] = new Option(t.name, t.number-1);
  }

  team1Sel.onchange = function() {
    //alert(this.name)
    //alert(this.value)
    //alert(teamPlayer.teams[this.value].players)
    if (team1Sel.selectedIndex == 0) {
      playerSel1A.length = 1;
      playerSel1B.length = 1;
    }
    
    if (team1Sel.selectedIndex > 0) {
      playerSel1A.length = 1;
      playerSel1B.length = 1;
      for (const p of teamPlayer.teams[this.value].players) {
        //alert(p.pid)
        const name = p.lastName + "," + p.firstName
        playerSel1A.options[playerSel1A.options.length] = new Option(name, p.pid);
        playerSel1B.options[playerSel1B.options.length] = new Option(name, p.pid);
    }
    }
  }

  
  team2Sel.onchange = function() {
    if (team2Sel.selectedIndex == 0) {
      playerSel2A.length = 1;
      playerSel2B.length = 1;
    }
    if (team2Sel.selectedIndex > 0) {
      playerSel2A.length = 1;
      playerSel2B.length = 1;
      for (const p of teamPlayer.teams[this.value].players) {
      //alert(p.pid)
        const name = p.lastName + "," + p.firstName
        playerSel2A.options[playerSel2A.options.length] = new Option(name, p.pid);
        playerSel2B.options[playerSel2B.options.length] = new Option(name, p.pid);
      }
    }
  }

}
</script>







